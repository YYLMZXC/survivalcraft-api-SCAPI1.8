#ifdef HLSL

Texture2D u_texture;
SamplerState u_samplerState;
float3 u_fogColor;

void main(
	in float4 v_color : COLOR,
	in float2 v_texcoord: TEXCOORD,
	in float v_fog : FOG,
	out float4 svTarget: SV_TARGET
)
{
	// Color
	float4 result = v_color;

	// Texture
	result *= u_texture.Sample(u_samplerState, v_texcoord);
	
	// Alpha threshold
	if (result.a <= 0.0)
		discard;

	// Highlight
	result.rgb = result.rgb * 1.2 + 0.05 * float3(1, 1, 1);

	// Fog
	float4 premultipliedFogColor = float4(u_fogColor * result.a, result.a);
	result = lerp(result, premultipliedFogColor, v_fog);
	
	// Return
	svTarget = result;
}

#endif
#ifdef GLSL

// <Sampler Name='u_samplerState' Texture='u_texture' />

#ifdef GL_ES
precision mediump float;
#endif

uniform sampler2D u_texture;
uniform vec3 u_fogColor;

varying vec4 v_color;
varying vec2 v_texcoord;
varying float v_fog;
	
void main()
{
	// Color
	vec4 result = v_color;

	// Texture
	result *= texture2D(u_texture, v_texcoord);
	
	// Alpha threshold
	if (result.a <= 0.0)
		discard;

	// Highlight
	result.rgb = result.rgb * 1.2 + 0.05 * vec3(1, 1, 1);

	// Fog
	vec4 premultipliedFogColor = vec4(u_fogColor * result.a, result.a);
	result = mix(result, premultipliedFogColor, v_fog);
	
	// Return
	gl_FragColor = result;
}

#endif